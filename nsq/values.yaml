# Default values for nsq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: nsqio/nsq
  tag: v1.2.0
  pullPolicy: IfNotPresent

imagePullSecrets: []

nameOverride: "nsq"
fullnameOverride: "nsq"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nsqd:

  ## Number of replicas
  replicaCount: 3

  ## Limit of revisions history
  revisionHistoryLimit: 5

  ## StatefulSet controller supports relax its ordering guarantees while preserving its uniqueness and identity guarantees. There are two valid pod management policies: OrderedReady and Parallel
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  ##
  podManagementPolicy: "Parallel"

  ## StatefulSet controller supports automated updates. There are two valid update strategies: RollingUpdate and OnDelete
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
  ##
  updateStrategy: "RollingUpdate"

  ##
  ## NSQd Node selectors and tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  ##
  #nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
  #tolerations: []
  #
  ## NSQd pod/node affinity/anti-affinity
  ##
  #affinity:
  #  nodeAffinity:
  ## EXAMPLES:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #        - matchExpressions:
  #            - key: cloud.google.com/gke-preemptible
  #              operator: NotIn
  #              values:
  #                - 'true'
  #  podAntiAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      - labelSelector:
  #          matchExpressions:
  #            - key: app
  #              operator: In
  #              values:
  #                - nsq
  #        topologyKey: kubernetes.io/hostname
  #  requiredDuringSchedulingIgnoredDuringExecution:
  #    nodeSelectorTerms:
  #    - matchExpressions:
  #      - key: "application/clickhouse"
  #        operator: In
  #        values:
  #        - "true"

  ## Partition update strategy
  ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
  ##
  # rollingUpdatePartition:

  ## NSQd ports:
  ## https://nsq.io/components/nsqd.html
  ##
  tcp_port: 4150
  http_port: 4151
  https_port: 4152

  mem_queue_size: 200000
  msg_timeout: "30m0s"

  ## Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated.
  ## More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  livenessProbe:
    tcpSocket:
      port: 4150
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  ## Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated.
  ## More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  readinessProbe:
    tcpSocket:
      port: 4150
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  path: /nsqd-data

  ## volumeClaimTemplates is a list of claims that pods are allowed to reference.
  ## The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod.
  ## Every claim in this list must have at least one matching (by name) volumeMount in one container in the template.
  ## A claim in this list takes precedence over any volumes in the template, with the same name.
  persistentVolumeClaim:
    enabled: false
    ## NSQd data volume
    dataPersistentVolume:
      enabled: false
      accessModes:
      - "ReadWriteOnce"
      storageClassName: "-"
      storage: "1Gi"
      volumeMode: "Filesystem"

  ## A way to specify reclaim policy and so is to create a storage class
  ## https://medium.com/faun/kubernetes-how-to-set-reclaimpolicy-for-persistentvolumeclaim-7eb7d002bb2e
  ## https://kubernetes.io/docs/concepts/storage/storage-classes/
  ## https://www.terraform.io/docs/providers/kubernetes/r/storage_class.html
  ## https://kubernetes.io/docs/tasks/administer-cluster/change-pv-reclaim-policy/

nsqlookupd:

  ## Number of replicas
  replicaCount: 3

  ## Limit of revisions history
  revisionHistoryLimit: 5

  ## StatefulSet controller supports relax its ordering guarantees while preserving its uniqueness and identity guarantees. There are two valid pod management policies: OrderedReady and Parallel
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  ##
  podManagementPolicy: "Parallel"

  ## StatefulSet controller supports automated updates. There are two valid update strategies: RollingUpdate and OnDelete
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
  ##
  updateStrategy: "RollingUpdate"

  ## NSQlookupd ports:
  ## https://nsq.io/components/nsqlookupd.html
  ##
  tcp_port: 4160
  http_port: 4161

  ##
  ## NSQlookupd Node selectors and tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  ##
  #nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
  #tolerations: []
  #
  ## NSQlookupd pod/node affinity/anti-affinity
  ##
  #affinity:
  #  nodeAffinity:
  ## EXAMPLES:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #        - matchExpressions:
  #            - key: cloud.google.com/gke-preemptible
  #              operator: NotIn
  #              values:
  #                - 'true'
  #  podAntiAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      - labelSelector:
  #          matchExpressions:
  #            - key: app
  #              operator: In
  #              values:
  #                - nsq
  #        topologyKey: kubernetes.io/hostname
  #  requiredDuringSchedulingIgnoredDuringExecution:
  #    nodeSelectorTerms:
  #    - matchExpressions:
  #      - key: "application/clickhouse"
  #        operator: In
  #        values:
  #        - "true"

  ## Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated.
  ## More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  livenessProbe:
    tcpSocket:
      port: 4160
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  ## Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated.
  ## More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  readinessProbe:
    tcpSocket:
      port: 4160
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

nsqadmin:

  ## Number of replicas
  replicaCount: 0

  ## Limit of revisions history
  revisionHistoryLimit: 5

  ##
  ## The deployment strategy to use to replace existing pods with new ones.
  updateStrategy:
    ##
    ## Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
    type: RollingUpdate
    rollingUpdate:
      ##
      ## The maximum number of pods that can be scheduled above the desired number of pods.
      maxSurge: 1
      ##
      ## The maximum number of pods that can be unavailable during the update.
      maxUnavailable: 1

  ## NSQAdmin ports:
  ## https://nsq.io/components/nsqadmin.html
  ##
  http_port: 4171

  service:
    type: ClusterIP
    port: 80

  # ingress for NSQAdmin
  ingress:
    enabled: false
    annotations: {}
    hosts:
      - host: nsqadmin.local
        paths: []
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  ##
  ## NSQAdmin Node selectors and tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  ##
  #nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
  #tolerations: []
  #
  ## NSQAdmin pod/node affinity/anti-affinity
  ##
  #affinity:
  #  nodeAffinity:
  ## EXAMPLES:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #        - matchExpressions:
  #            - key: cloud.google.com/gke-preemptible
  #              operator: NotIn
  #              values:
  #                - 'true'
  #  podAntiAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      - labelSelector:
  #          matchExpressions:
  #            - key: app
  #              operator: In
  #              values:
  #                - nsq
  #        topologyKey: kubernetes.io/hostname
  #  requiredDuringSchedulingIgnoredDuringExecution:
  #    nodeSelectorTerms:
  #    - matchExpressions:
  #      - key: "application/clickhouse"
  #        operator: In
  #        values:
  #        - "true"

  ## Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated.
  ## More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  livenessProbe:
    tcpSocket:
      port: 4171
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  ## Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated.
  ## More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  readinessProbe:
    tcpSocket:
      port: 4171
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
